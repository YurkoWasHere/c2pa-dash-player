{"version":3,"file":"dash.mss.min.js","mappings":"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","sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/./externals/BigInteger.js","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/compat get default export","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/global","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/webpack/runtime/node module decorator","webpack://dashjs/./src/streaming/vo/DataChunk.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/mss/MssFragmentInfoController.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/mss/errors/MssErrors.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/mss/MssFragmentMoofProcessor.js","webpack://dashjs/./src/mss/MssFragmentMoovProcessor.js","webpack://dashjs/./src/mss/MssFragmentProcessor.js","webpack://dashjs/./src/mss/parser/MssParser.js","webpack://dashjs/./src/mss/MssHandler.js","webpack://dashjs/./src/mss/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(self, function() {\nreturn ","var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET=\"0123456789abcdefghijklmnopqrstuvwxyz\";var supportsNativeBigInt=typeof BigInt===\"function\";function Integer(v,radix,alphabet,caseSensitive){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)]}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b}if(b===_0)break;b/=_2;x=x.square()}return y};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.isUnit())throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:typeof v===\"bigint\"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(Math.random()*top);result.push(digit);if(digit<top)restricted=false}return low.add(Integer.fromArray(result,BASE,false))}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase()}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i}for(i=0;i<length;i++){var c=text[i];if(c===\"-\")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit]}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(function(x){return stringify(x,alphabet)}).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?\"-\"+v:v))}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v))}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}if(typeof v===\"bigint\"){return new NativeBigInt(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n        /**\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\n         * @public\n         */\n        this.cmsd = null;\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in seconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n        /**\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\n         */\n        this._fileLoaderType = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\nHTTPRequest.LICENSE = 'license';\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport {HTTPRequest, HTTPRequestTrace};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor(url) {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaStartTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = url || null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\nfunction MssFragmentInfoController(config) {\n\n    config = config || {};\n\n    let instance,\n        logger,\n        fragmentModel,\n        started,\n        type,\n        loadFragmentTimeout,\n        startTime,\n        startFragmentTime,\n        index;\n\n    const streamProcessor = config.streamProcessor;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const controllerType = 'MssFragmentInfoController';\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function initialize() {\n        type = streamProcessor.getType();\n        fragmentModel = streamProcessor.getFragmentModel();\n\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function start() {\n        if (started) return;\n\n        logger.debug('Start');\n\n        started = true;\n        index = 0;\n\n        loadNextFragmentInfo();\n    }\n\n    function stop() {\n        if (!started) return;\n\n        logger.debug('Stop');\n\n        clearTimeout(loadFragmentTimeout);\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function reset() {\n        stop();\n    }\n\n    function loadNextFragmentInfo() {\n        if (!started) return;\n\n        // Get last segment from SegmentTimeline\n        const representation = getCurrentRepresentation();\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S_asArray;\n        const segment = segments[segments.length - 1];\n\n        // logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\n\n        // Generate segment request\n        const request = getRequestForSegment(adaptation, representation, segment);\n\n        // Send segment request\n        requestFragment.call(this, request);\n    }\n\n    function getRequestForSegment(adaptation, representation, segment) {\n        let timescale = adaptation.SegmentTemplate.timescale;\n        let request = new FragmentRequest();\n\n        request.mediaType = type;\n        request.type = HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE;\n        // request.range = segment.mediaRange;\n        request.startTime = segment.t / timescale;\n        request.duration = segment.d / timescale;\n        request.timescale = timescale;\n        // request.availabilityStartTime = segment.availabilityStartTime;\n        // request.availabilityEndTime = segment.availabilityEndTime;\n        // request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = index++;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.adaptationIndex = representation.adaptation.index;\n        request.representationId = representation.id;\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\n\n        return request;\n    }\n\n    function getCurrentRepresentation() {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n        return representation;\n    }\n\n    function requestFragment(request) {\n        // logger.debug('Load FragmentInfo for time: ' + request.startTime);\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\n            // We may have reached end of timeline in case of start-over streams\n            logger.debug('End of timeline');\n            stop();\n            return;\n        }\n\n        fragmentModel.executeRequest(request);\n    }\n\n    function fragmentInfoLoaded (e) {\n        if (!started) return;\n\n        const request = e.request;\n        if (!e.response) {\n            logger.error('Load error', request.url);\n            return;\n        }\n\n        let deltaFragmentTime,\n            deltaTime,\n            delay;\n\n        // logger.debug('FragmentInfo loaded: ', request.url);\n\n        if (startTime === null) {\n            startTime = new Date().getTime();\n        }\n\n        if (!startFragmentTime) {\n            startFragmentTime = request.startTime;\n        }\n\n        // Determine delay before requesting next FragmentInfo\n        deltaTime = (new Date().getTime() - startTime) / 1000;\n        deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\n        delay = Math.max(0, (deltaFragmentTime - deltaTime));\n\n        // Set timeout for requesting next FragmentInfo\n        clearTimeout(loadFragmentTimeout);\n        loadFragmentTimeout = setTimeout(function () {\n            loadFragmentTimeout = null;\n            loadNextFragmentInfo();\n        }, delay * 1000);\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        initialize: initialize,\n        controllerType: controllerType,\n        start: start,\n        fragmentInfoLoaded: fragmentInfoLoaded,\n        getType: getType,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../core/errors/ErrorsBase';\n\n/**\n * @class\n *\n */\nclass MssErrors extends ErrorsBase {\n    constructor() {\n        super();\n        /**\n         * Error code returned when no tfrf box is detected in MSS live stream\n         */\n        this.MSS_NO_TFRF_CODE = 200;\n\n        /**\n         * Error code returned when one of the codecs defined in the manifest is not supported\n         */\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\n\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\n    }\n}\n\nlet mssErrors = new MssErrors();\nexport default mssErrors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n\n/**\n * @class\n * @implements EventsBase\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         * @event MediaPlayerEvents#AST_IN_FUTURE\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the BaseURLs have been updated.\n         * @event MediaPlayerEvents#BASE_URLS_UPDATED\n         */\n        this.BASE_URLS_UPDATED = 'baseUrlsUpdated';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when the buffer level of a media type has been updated\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\n         */\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n\n        /**\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\n         */\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n\n        /**\n         * Triggered when the manifest load is started\n         * @event MediaPlayerEvents#MANIFEST_LOADING_STARTED\n         */\n        this.MANIFEST_LOADING_STARTED = 'manifestLoadingStarted';\n\n        /**\n         * Triggered when the manifest loading is finished, providing the request object information\n         * @event MediaPlayerEvents#MANIFEST_LOADING_FINISHED\n         */\n        this.MANIFEST_LOADING_FINISHED = 'manifestLoadingFinished';\n\n        /**\n         * Triggered when the manifest load is complete, providing the payload\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered when a new stream (period) starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when a stream (period) is being loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\n         */\n        this.STREAM_INITIALIZING = 'streamInitializing';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_UPDATED\n         */\n        this.STREAM_UPDATED = 'streamUpdated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\n         */\n        this.STREAM_ACTIVATED = 'streamActivated';\n\n        /**\n         * Triggered when a stream (period) is deactivated\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\n         */\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a throughput measurement based on the last segment request has been stored\n         * @event MediaPlayerEvents#THROUGHPUT_MEASUREMENT_STORED\n         */\n        this.THROUGHPUT_MEASUREMENT_STORED = 'throughputMeasurementStored';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_TO_PARSE\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Triggered when a caption is rendered.\n         * @event MediaPlayerEvents#CAPTION_RENDERED\n         */\n        this.CAPTION_RENDERED = 'captionRendered';\n\n        /**\n         * Triggered when the caption container is resized.\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\n         */\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\n         */\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * The event is fired when the frame at the current playback position of the media has finished loading;\n         * often the first frame\n         * @event MediaPlayerEvents#PLAYBACK_LOADED_DATA\n         */\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the video element reports that the volume has changed\n         * @event MediaPlayerEvents#PLAYBACK_VOLUME_CHANGED\n         */\n        this.PLAYBACK_VOLUME_CHANGED = 'playbackVolumeChanged';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n\n        /**\n         * Dash events are triggered at their respective start points on the timeline.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\n         */\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\n\n        /**\n         * Dash events are triggered as soon as they were parsed.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\n         */\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\n\n        /**\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\n         */\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\n\n        /**\n         * Event that is dispatched whenever the player switches to a different representation\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\n         */\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\n\n        /**\n         * Event that is dispatched whenever an adaptation set is removed due to all representations not being supported.\n         * @event MediaPlayerEvents#ADAPTATION_SET_REMOVED_NO_CAPABILITIES\n         */\n        this.ADAPTATION_SET_REMOVED_NO_CAPABILITIES = 'adaptationSetRemovedNoCapabilities';\n\n        /**\n         * Triggered when a content steering request has completed.\n         * @event MediaPlayerEvents#CONTENT_STEERING_REQUEST_COMPLETED\n         */\n        this.CONTENT_STEERING_REQUEST_COMPLETED = 'contentSteeringRequestCompleted';\n\n        /**\n         * Triggered when an inband prft (ProducerReferenceTime) boxes has been received.\n         * @event MediaPlayerEvents#INBAND_PRFT\n         */\n        this.INBAND_PRFT = 'inbandPrft';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from '../streaming/vo/DashJSError';\nimport MssErrors from './errors/MssErrors';\n\nimport Events from '../streaming/MediaPlayerEvents';\n\n/**\n * @module MssFragmentMoofProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoofProcessor(config) {\n\n    config = config || {};\n    let instance,\n        type,\n        logger;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const errorHandler = config.errHandler;\n    const eventBus = config.eventBus;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        type = '';\n    }\n\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const timescale = adaptation.SegmentTemplate.timescale;\n\n        type = streamProcessor.getType();\n\n        // Process tfrf only for live streams or start-over static streams (timeShiftBufferDepth > 0)\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\n            return;\n        }\n\n        if (!tfrf) {\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\n            return;\n        }\n\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\n        const entries = tfrf.entry;\n        let entry,\n            segmentTime,\n            range;\n        let segment = null;\n        let t = 0;\n        let endTime;\n        let availabilityStartTime = null;\n\n        if (entries.length === 0) {\n            return;\n        }\n\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\n        entry = entries[0];\n\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\n        // => then do not update anymore timeline\n        if (manifest.type === 'static') {\n            // Get first segment time\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\n                return;\n            }\n        }\n\n        // logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\n\n        // Get last segment time\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\n        // logger.debug('Last segment - t = ', (segmentTime / timescale));\n\n        // Check if we have to append new segment to timeline\n        if (entry.fragment_absolute_time <= segmentTime) {\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\n            return;\n        }\n\n        // logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\n        segment = {};\n        segment.t = entry.fragment_absolute_time;\n        segment.d = entry.fragment_duration;\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\n        if (segments[0].tManifest) {\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\n            segment.tManifest = entry.fragment_absolute_time;\n        }\n\n        // Patch previous segment duration\n        let lastSegment = segments[segments.length - 1];\n        if (lastSegment.t + lastSegment.d !== segment.t) {\n            logger.debug('Patch segment duration - t = ', lastSegment.t + ', d = ' + lastSegment.d + ' => ' + (segment.t - lastSegment.t));\n            lastSegment.d = segment.t - lastSegment.t;\n        }\n\n        segments.push(segment);\n\n        // In case of static start-over streams, update content duration\n        if (manifest.type === 'static') {\n            if (type === 'video') {\n                segment = segments[segments.length - 1];\n                endTime = (segment.t + segment.d) / timescale;\n                if (endTime > representation.adaptation.period.duration) {\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: endTime });\n                }\n            }\n            return;\n        } else {\n            // In case of live streams, update segment timeline according to DVR window\n            if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\n                // Get timestamp of the last segment\n                segment = segments[segments.length - 1];\n                t = segment.t;\n\n                // Determine the segments' availability start time\n                availabilityStartTime = (t - (manifest.timeShiftBufferDepth * timescale)) / timescale;\n\n                // Remove segments prior to availability start time\n                segment = segments[0];\n                endTime = (segment.t + segment.d) / timescale;\n                while (endTime < availabilityStartTime) {\n                    // Check if not currently playing the segment to be removed\n                    if (!playbackController.isPaused() && playbackController.getTime() < endTime) {\n                        break;\n                    }\n                    // logger.debug('Remove segment  - t = ' + (segment.t / timescale));\n                    segments.splice(0, 1);\n                    segment = segments[0];\n                    endTime = (segment.t + segment.d) / timescale;\n                }\n            }\n\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\n        }\n\n    }\n\n    function updateDVR(type, range, manifestInfo) {\n        if (type !== 'video' && type !== 'audio') return;\n        const dvrInfos = dashMetrics.getCurrentDVRInfo(type);\n        if (!dvrInfos || (range.end > dvrInfos.range.end)) {\n            logger.debug('Update DVR range: [' + range.start + ' - ' + range.end + ']');\n            dashMetrics.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\n            playbackController.updateCurrentTime(type);\n        }\n    }\n\n    // This function returns the offset of the 1st byte of a child box within a container box\n    function getBoxOffset(parent, type) {\n        let offset = 8;\n        let i = 0;\n\n        for (i = 0; i < parent.boxes.length; i++) {\n            if (parent.boxes[i].type === type) {\n                return offset;\n            }\n            offset += parent.boxes[i].size;\n        }\n        return offset;\n    }\n\n    function convertFragment(e, streamProcessor) {\n        let i;\n\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        const traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        const trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        const sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [0];\n\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\n\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\n        const moof = isoFile.fetch('moof');\n        let length = moof.getLength();\n        trun.data_offset = length + 8;\n\n        // Update saio box offset field according to new senc box offset\n        let saio = isoFile.fetch('saio');\n        if (saio !== null) {\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\n            // Set offset from begin fragment to the first IV field in senc box\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\n        }\n\n        // Write transformed/processed fragment into request reponse data\n        e.response = isoFile.write();\n    }\n\n    function updateSegmentList(e, streamProcessor) {\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        if (!e.response) {\n            throw new Error('e.response parameter is missing');\n        }\n\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        convertFragment: convertFragment,\n        updateSegmentList: updateSegmentList,\n        getType: getType\n    };\n\n    setup();\n    return instance;\n}\n\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport MssErrors from './errors/MssErrors';\n\n/**\n * @module MssFragmentMoovProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoovProcessor(config) {\n    config = config || {};\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n    const constants = config.constants;\n    const ISOBoxer = config.ISOBoxer;\n\n    let protectionController = config.protectionController;\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        timescale,\n        trackId;\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case constants.AUDIO:\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection && protectionController) {\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\n        mdhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                hdlr.handler_type = 'vide';\n                break;\n            case constants.AUDIO:\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n            case constants.AUDIO:\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\n        let pssh_bytes,\n            pssh,\n            i,\n            parsedBuffer;\n\n        for (i = 0; i < keySystems.length; i += 1) {\n            pssh_bytes = keySystems[i].initData;\n            if (pssh_bytes) {\n                parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\n                pssh = parsedBuffer.fetch('pssh');\n                if (pssh) {\n                    ISOBoxer.Utils.appendBox(moov, pssh);\n                }\n            }\n        }\n    }\n\n    function createTrackEncryptionBox(schi) {\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n        if (!rep || !rep.adaptation) {\n            return;\n        }\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        timescale = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    instance = {\n        generateMoov: generateMoov\n    };\n\n    return instance;\n}\n\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MssFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const eventBus = config.eventBus;\n    const protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n    let mssFragmentMoovProcessor,\n        mssFragmentMoofProcessor,\n        instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n        mssFragmentMoovProcessor = MssFragmentMoovProcessor(context).create({\n            protectionController: protectionController,\n            constants: config.constants,\n            ISOBoxer: ISOBoxer});\n\n        mssFragmentMoofProcessor = MssFragmentMoofProcessor(context).create({\n            dashMetrics: dashMetrics,\n            playbackController: playbackController,\n            ISOBoxer: ISOBoxer,\n            eventBus: eventBus,\n            debug: debug,\n            errHandler: config.errHandler\n        });\n    }\n\n    function generateMoov(rep) {\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, streamProcessor) {\n        if (!e || !e.request || !e.response) {\n            throw new Error('e parameter is missing or malformed');\n        }\n\n        if (e.request.type === 'MediaSegment') {\n            // MediaSegment => convert to Smooth Streaming moof format\n            mssFragmentMoofProcessor.convertFragment(e, streamProcessor);\n\n        } else if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n            // FragmentInfo (live) => update segments list\n            mssFragmentMoofProcessor.updateSegmentList(e, streamProcessor);\n\n            // Stop event propagation (FragmentInfo must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov,\n        processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssParser\n * @ignore\n * @param {Object} config object\n */\n\nimport BigInt from '../../../externals/BigInteger';\n\nfunction MssParser(config) {\n    config = config || {};\n    const BASE64 = config.BASE64;\n    const debug = config.debug;\n    const constants = config.constants;\n    const manifestModel = config.manifestModel;\n    const settings = config.settings;\n\n    const DEFAULT_TIME_SCALE = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AACH', 'AACP', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    // MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\n    const ROLE = {\n        'CAPT': 'main',\n        'SUBT': 'alternate',\n        'DESC': 'main'\n    };\n    const ACCESSIBILITY = {\n        'DESC': '2'\n    };\n    const samplingFrequencyIndex = {\n        96000: 0x0,\n        88200: 0x1,\n        64000: 0x2,\n        48000: 0x3,\n        44100: 0x4,\n        32000: 0x5,\n        24000: 0x6,\n        22050: 0x7,\n        16000: 0x8,\n        12000: 0x9,\n        11025: 0xA,\n        8000: 0xB,\n        7350: 0xC\n    };\n    const mimeTypeMap = {\n        'video': 'video/mp4',\n        'audio': 'audio/mp4',\n        'text': 'application/mp4'\n    };\n\n    let instance,\n        logger,\n        initialBufferSettings;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function getAttributeAsBoolean(node, attrName) {\n        const value = node.getAttribute(attrName);\n        if (!value) return false;\n        return value.toLowerCase() === 'true';\n    }\n\n    function mapPeriod(smoothStreamingMedia, timescale) {\n        const period = {};\n        let streams,\n            adaptation;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i], timescale);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex, timescale) {\n        const adaptationSet = {};\n        const representations = [];\n        let segmentTemplate;\n        let qualityLevels,\n            representation,\n            i,\n            index;\n\n        const name = streamIndex.getAttribute('Name');\n        const type = streamIndex.getAttribute('Type');\n        const lang = streamIndex.getAttribute('Language');\n        const fallBackId = lang ? type + '_' + lang : type;\n\n        adaptationSet.id = name || fallBackId;\n        adaptationSet.contentType = type;\n        adaptationSet.lang = lang || 'und';\n        adaptationSet.mimeType = mimeTypeMap[type];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\n        if (adaptationSet.subType) {\n            if (ROLE[adaptationSet.subType]) {\n                let role = {\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\n                    value: ROLE[adaptationSet.subType]\n                };\n                adaptationSet.Role = role;\n                adaptationSet.Role_asArray = [role];\n            }\n            if (ACCESSIBILITY[adaptationSet.subType]) {\n                let accessibility = {\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\n                    value: ACCESSIBILITY[adaptationSet.subType]\n                };\n                adaptationSet.Accessibility = accessibility;\n                adaptationSet.Accessibility_asArray = [accessibility];\n            }\n        }\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            index = qualityLevels[i].getAttribute('Index');\n            qualityLevels[i].Id = adaptationSet.id + ((index !== null) ? ('_' + index) : '');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n        const representation = {};\n        const type = streamIndex.getAttribute('Type');\n        let fourCCValue = null;\n        let width = null;\n        let height = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n\n        width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n        if (!isNaN(width)) representation.width = width;\n        if (!isNaN(height)) representation.height = height;\n\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null || fourCCValue === '') {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null || fourCCValue === '') {\n            if (type === constants.AUDIO) {\n                fourCCValue = 'AAC';\n            } else if (type === constants.VIDEO) {\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\n                return null;\n            }\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            logger.warn('Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = constants.STPP;\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let objectType = 0;\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex, timescale) {\n        const segmentTemplate = {};\n        let mediaUrl,\n            streamIndexTimeScale,\n            url;\n\n        url = streamIndex.getAttribute('Url');\n        mediaUrl = url ? url.replace('{bitrate}', '$Bandwidth$') : null;\n        mediaUrl = mediaUrl ? mediaUrl.replace('{start time}', '$Time$') : null;\n\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = streamIndexTimeScale;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\n\n        // Patch: set availabilityTimeOffset to Infinity since segments are available as long as they are present in timeline\n        segmentTemplate.availabilityTimeOffset = 'INF';\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex, timescale) {\n        const segmentTimeline = {};\n        const chunks = streamIndex.getElementsByTagName('c');\n        const segments = [];\n        let segment,\n            prevSegment,\n            tManifest,\n            i, j, r;\n        let duration = 0;\n\n        for (i = 0; i < chunks.length; i++) {\n            segment = {};\n\n            // Get time 't' attribute value\n            tManifest = chunks[i].getAttribute('t');\n\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\n            if (tManifest && BigInt(tManifest).greater(BigInt(Number.MAX_SAFE_INTEGER))) {\n                segment.tManifest = tManifest;\n            }\n            segment.t = parseFloat(tManifest);\n\n            // Get duration 'd' attribute value\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\n\n            // If 't' not defined for first segment then t=0\n            if ((i === 0) && !segment.t) {\n                segment.t = 0;\n            }\n\n            if (i > 0) {\n                prevSegment = segments[segments.length - 1];\n                // Update previous segment duration if not defined\n                if (!prevSegment.d) {\n                    if (prevSegment.tManifest) {\n                        prevSegment.d = BigInt(tManifest).subtract(BigInt(prevSegment.tManifest)).toJSNumber();\n                    } else {\n                        prevSegment.d = segment.t - prevSegment.t;\n                    }\n                    duration += prevSegment.d;\n                }\n                // Set segment absolute timestamp if not set in manifest\n                if (!segment.t) {\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                        segment.t = parseFloat(segment.tManifest);\n                    } else {\n                        segment.t = prevSegment.t + prevSegment.d;\n                    }\n                }\n            }\n\n            if (segment.d) {\n                duration += segment.d;\n            }\n\n            // Create new segment\n            segments.push(segment);\n\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\n            r = parseFloat(chunks[i].getAttribute('r'));\n            if (r) {\n\n                for (j = 0; j < (r - 1); j++) {\n                    prevSegment = segments[segments.length - 1];\n                    segment = {};\n                    segment.t = prevSegment.t + prevSegment.d;\n                    segment.d = prevSegment.d;\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                    }\n                    duration += segment.d;\n                    segments.push(segment);\n                }\n            }\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n        segmentTimeline.duration = duration / timescale;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        if (wrmHeader) {\n            // Convert from multi-byte to unicode\n            wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n            // Convert to string\n            wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n            // Parse <WRMHeader> to get KID field value\n            xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n            KID = xmlReader.querySelector('KID').textContent;\n\n            // Get KID (base64 decoded) as byte array\n            KID = BASE64.decodeArray(KID);\n\n            // Convert UUID from little-endian to big-endian\n            convertUuidEndianness(KID);\n        }\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        const temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n        let pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n        return {\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n            value: 'com.microsoft.playready',\n            pro: pro,\n            pro_asArray: pro\n        };\n    }\n\n    function createWidevineContentProtection(KID) {\n        let widevineCP = {\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n            value: 'com.widevine.alpha'\n        };\n        if (!KID)\n            return widevineCP;\n        // Create Widevine CENC header (Protocol Buffer) with KID value\n        const wvCencHeader = new Uint8Array(2 + KID.length);\n        wvCencHeader[0] = 0x12;\n        wvCencHeader[1] = 0x10;\n        wvCencHeader.set(KID, 2);\n\n        // Create a pssh box\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\n        let pssh = new Uint8Array(length);\n        let i = 0;\n\n        // Set box length value\n        pssh[i++] = (length & 0xFF000000) >> 24;\n        pssh[i++] = (length & 0x00FF0000) >> 16;\n        pssh[i++] = (length & 0x0000FF00) >> 8;\n        pssh[i++] = (length & 0x000000FF);\n\n        // Set type ('pssh'), version (0) and flags (0)\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\n        i += 8;\n\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\n        pssh.set([0xed, 0xef, 0x8b, 0xa9, 0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\n        i += 16;\n\n        // Set data length value\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\n\n        // Copy Widevine CENC header\n        pssh.set(wvCencHeader, i);\n\n        // Convert to BASE64 string\n        pssh = String.fromCharCode.apply(null, pssh);\n        pssh = BASE64.encodeASCII(pssh);\n\n        widevineCP.pssh = { __text: pssh };\n\n        return widevineCP;\n    }\n\n    function processManifest(xmlDoc) {\n        const manifest = {};\n        const contentProtections = [];\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            timestampOffset,\n            startTime,\n            segments,\n            timescale,\n            segmentDuration,\n            i, j;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = getAttributeAsBoolean(smoothStreamingMedia, 'IsLive') ? 'dynamic' : 'static';\n        timescale = smoothStreamingMedia.getAttribute('TimeScale');\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\n        // If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite\n        if (manifest.type === 'dynamic' && (dvrWindowLength === 0 || isNaN(dvrWindowLength))) {\n            dvrWindowLength = Infinity;\n        }\n        // Star-over\n        if (dvrWindowLength === 0 && getAttributeAsBoolean(smoothStreamingMedia, 'CanSeek')) {\n            dvrWindowLength = Infinity;\n        }\n\n        if (dvrWindowLength > 0) {\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\n        }\n\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\n        manifest.minBufferTime = 2;\n        manifest.ttmlTimeIsRelative = true;\n\n        // Live manifest with Duration = start-over\n        if (manifest.type === 'dynamic' && duration > 0) {\n            manifest.type = 'static';\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\n            // Duration will be set according to current segment timeline duration (see below)\n        }\n\n        if (manifest.type === 'dynamic') {\n            manifest.refreshManifestOnSwitchTrack = true; // Refresh manifest when switching tracks\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\n            manifest.availabilityStartTime = new Date(null); // Returns 1970\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // Uncomment to test live to static manifests\n        // if (manifest.type !== 'static') {\n        //     manifest.type = 'static';\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\n        //     manifest.timeShiftBufferDepth = null;\n        // }\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            // Create ContentProtection for Widevine (as a CENC protection)\n            contentProtection = createWidevineContentProtection(KID);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n\n        for (i = 0; i < adaptations.length; i += 1) {\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n\n            if (adaptations[i].contentType === 'video') {\n                // Get video segment duration\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d / adaptations[i].SegmentTemplate.timescale;\n                // Set minBufferTime to one segment duration\n                manifest.minBufferTime = segmentDuration;\n\n                if (manifest.type === 'dynamic') {\n                    // Match timeShiftBufferDepth to video segment timeline duration\n                    if (manifest.timeShiftBufferDepth > 0 &&\n                        manifest.timeShiftBufferDepth !== Infinity &&\n                        manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\n                        manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\n                    }\n                }\n            }\n        }\n\n        // Cap minBufferTime to timeShiftBufferDepth\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\n\n        // In case of live streams:\n        // 1- configure player buffering properties according to target live delay\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\n        // 3- Set retry attempts and intervals for FragmentInfo requests\n        if (manifest.type === 'dynamic') {\n            let targetLiveDelay = settings.get().streaming.delay.liveDelay;\n            if (!targetLiveDelay) {\n                const liveDelayFragmentCount = settings.get().streaming.delay.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.delay.liveDelayFragmentCount) ? settings.get().streaming.delay.liveDelayFragmentCount : 4;\n                targetLiveDelay = segmentDuration * liveDelayFragmentCount;\n            }\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\n            // Consider a margin of more than one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\n            let bufferTime = liveDelay - (segmentDuration * 1.5);\n\n            // Store initial buffer settings\n            initialBufferSettings = {\n                'streaming': {\n                    'buffer': {\n                        'stableBufferTime': settings.get().streaming.buffer.stableBufferTime,\n                        'bufferTimeAtTopQuality': settings.get().streaming.buffer.bufferTimeAtTopQuality,\n                        'bufferTimeAtTopQualityLongForm': settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm\n                    },\n                    'timeShiftBuffer': {\n                        calcFromSegmentTimeline: settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline\n                    },\n                    'delay': {\n                        'liveDelay': settings.get().streaming.delay.liveDelay\n                    }\n                }\n            };\n\n            settings.update({\n                'streaming': {\n                    'buffer': {\n                        'stableBufferTime': bufferTime,\n                        'bufferTimeAtTopQuality': bufferTime,\n                        'bufferTimeAtTopQualityLongForm': bufferTime\n                    },\n                    'timeShiftBuffer': {\n                        calcFromSegmentTimeline: true\n                    },\n                    'delay': {\n                        'liveDelay': liveDelay\n                    }\n                }\n            });\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        // In case of VOD streams, check if start time is greater than 0\n        // Then determine timestamp offset according to higher audio/video start time\n        // (use case = live stream delinearization)\n        if (manifest.type === 'static') {\n            // In case of start-over stream and manifest reloading (due to track switch)\n            // we consider previous timestampOffset to keep timelines synchronized\n            var prevManifest = manifestModel.getValue();\n            if (prevManifest && prevManifest.timestampOffset) {\n                timestampOffset = prevManifest.timestampOffset;\n            } else {\n                for (i = 0; i < adaptations.length; i++) {\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                        startTime = segments[0].t;\n                        if (timestampOffset === undefined) {\n                            timestampOffset = startTime;\n                        }\n                        timestampOffset = Math.min(timestampOffset, startTime);\n                        // Correct content duration according to minimum adaptation's segment timeline duration\n                        // in order to force <video> element sending 'ended' event\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\n                    }\n                }\n            }\n            if (timestampOffset > 0) {\n                // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\n                manifest.timestampOffset = timestampOffset;\n                for (i = 0; i < adaptations.length; i++) {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    for (j = 0; j < segments.length; j++) {\n                        if (!segments[j].tManifest) {\n                            segments[j].tManifest = segments[j].t.toString();\n                        }\n                        segments[j].t -= timestampOffset;\n                    }\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        period.start = Math.max(segments[0].t, period.start);\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\n                    }\n                }\n                period.start /= manifest.timescale;\n            }\n        }\n\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\n        // and then avoid 'ended' event not being raised\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\n        period.duration = manifest.mediaPresentationDuration;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            const parser = new window.DOMParser();\n\n            xmlDoc = parser.parseFromString(data, 'text/xml');\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                throw new Error('parsing the manifest failed');\n            }\n        }\n\n        return xmlDoc;\n    }\n\n    function getMatchers() {\n        return null;\n    }\n\n    function getIron() {\n        return null;\n    }\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    function reset() {\n        // Restore initial buffer settings\n        if (initialBufferSettings) {\n            settings.update(initialBufferSettings);\n        }\n    }\n\n    instance = {\n        parse: internalParse,\n        getMatchers: getMatchers,\n        getIron: getIron,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DataChunk from '../streaming/vo/DataChunk';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport MssFragmentInfoController from './MssFragmentInfoController';\nimport MssFragmentProcessor from './MssFragmentProcessor';\nimport MssParser from './parser/MssParser';\nimport MssErrors from './errors/MssErrors';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\nfunction MssHandler(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const constants = config.constants;\n    const initSegmentType = config.initSegmentType;\n    const playbackController = config.playbackController;\n    const streamController = config.streamController;\n    let mssParser,\n        mssFragmentProcessor,\n        fragmentInfoControllers,\n        instance;\n\n    function setup() {\n        fragmentInfoControllers = [];\n    }\n\n    function createMssFragmentProcessor() {\n        mssFragmentProcessor = MssFragmentProcessor(context).create(config);\n    }\n\n    function getStreamProcessor(type) {\n        return streamController.getActiveStreamProcessors().filter(processor => {\n            return processor.getType() === type;\n        })[0];\n    }\n\n    function getFragmentInfoController(type) {\n        return fragmentInfoControllers.filter(controller => {\n            return (controller.getType() === type);\n        })[0];\n    }\n\n    function createDataChunk(request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function startFragmentInfoControllers() {\n\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or text)\n        let processors = streamController.getActiveStreamProcessors();\n        processors.forEach(function (processor) {\n            if (processor.getType() === constants.VIDEO ||\n                processor.getType() === constants.AUDIO ||\n                processor.getType() === constants.TEXT) {\n\n                let fragmentInfoController = getFragmentInfoController(processor.getType());\n                if (!fragmentInfoController) {\n                    fragmentInfoController = MssFragmentInfoController(context).create({\n                        streamProcessor: processor,\n                        baseURLController: config.baseURLController,\n                        debug: config.debug\n                    });\n                    fragmentInfoController.initialize();\n                    fragmentInfoControllers.push(fragmentInfoController);\n                }\n                fragmentInfoController.start();\n            }\n        });\n    }\n\n    function stopFragmentInfoControllers() {\n        fragmentInfoControllers.forEach(c => {\n            c.reset();\n        });\n        fragmentInfoControllers = [];\n    }\n\n    function onInitFragmentNeeded(e) {\n        let streamProcessor = getStreamProcessor(e.mediaType);\n        if (!streamProcessor) return;\n\n        // Create init segment request\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n        let mediaInfo = streamProcessor.getMediaInfo();\n\n        let request = new FragmentRequest();\n        request.mediaType = representation.adaptation.type;\n        request.type = initSegmentType;\n        request.range = representation.range;\n        request.quality = representation.index;\n        request.mediaInfo = mediaInfo;\n        request.representationId = representation.id;\n\n        const chunk = createDataChunk(request, mediaInfo.streamInfo.id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\n\n        try {\n            // Generate init segment (moov)\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\n\n            // Notify init segment has been loaded\n            eventBus.trigger(events.INIT_FRAGMENT_LOADED,\n                { chunk: chunk },\n                { streamId: mediaInfo.streamInfo.id, mediaType: representation.adaptation.type }\n            );\n        } catch (e) {\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\n        }\n\n        // Change the sender value to stop event to be propagated\n        e.sender = null;\n    }\n\n    function onSegmentMediaLoaded(e) {\n        if (e.error) return;\n\n        let streamProcessor = getStreamProcessor(e.request.mediaType);\n        if (!streamProcessor) return;\n\n        // Process moof to transcode it from MSS to DASH (or to update segment timeline for SegmentInfo fragments)\n        mssFragmentProcessor.processFragment(e, streamProcessor);\n\n        if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n            // If FragmentInfo loaded, then notify corresponding MssFragmentInfoController\n            let fragmentInfoController = getFragmentInfoController(e.request.mediaType);\n            if (fragmentInfoController) {\n                fragmentInfoController.fragmentInfoLoaded(e);\n            }\n        }\n\n        // Start MssFragmentInfoControllers in case of start-over streams\n        let manifestInfo = e.request.mediaInfo.streamInfo.manifestInfo;\n        if (!manifestInfo.isDynamic && manifestInfo.dvrWindowSize !== Infinity) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackPaused() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackSeeking() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onTTMLPreProcess(ttmlSubtitles) {\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\n            return;\n        }\n\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\n    }\n\n    function registerEvents() {\n        eventBus.on(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_SEEKING, onPlaybackSeeking, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\n    }\n\n    function reset() {\n        if (mssParser) {\n            mssParser.reset();\n            mssParser = undefined;\n        }\n\n        eventBus.off(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, this);\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\n\n        // Reset FragmentInfoControllers\n        stopFragmentInfoControllers();\n    }\n\n    function createMssParser() {\n        mssParser = MssParser(context).create(config);\n        return mssParser;\n    }\n\n    instance = {\n        reset,\n        createMssParser,\n        createMssFragmentProcessor,\n        registerEvents\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssHandler.__dashjs_factory_name = 'MssHandler';\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\nfactory.errors = MssErrors;\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory; /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssHandler from './MssHandler';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MssHandler = MssHandler;\n\nexport default dashjs;\nexport { MssHandler };\n"],"names":["root","factory","exports","module","define","amd","self","bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","value","sign","this","isSmall","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","arr","trim","length","compareAbs","i","createArray","x","Array","truncate","ceil","add","a","b","sum","l_a","l_b","r","carry","base","push","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","max","slice","d","c","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","Error","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","modPow","prototype","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","log","toJSNumber","t","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","p","e","min","gcd","text","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","low","range","random","restricted","top","fromArray","hasOwnProperty","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","definition","key","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","call","nmd","paths","children","_createClass","DataChunk","_classCallCheck","streamId","mediaInfo","segmentType","quality","NaN","index","bytes","end","duration","representationId","endFragment","HTTPRequest","tcpid","type","url","actualurl","trequest","tresponse","responsecode","interval","trace","cmsd","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","CONTENT_STEERING_TYPE","OTHER_TYPE","FragmentRequest","action","ACTION_DOWNLOAD","startTime","mediaStartTime","mediaType","timescale","serviceLocation","requestStartDate","firstByteDate","requestEndDate","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","info","init","ACTION_COMPLETE","MssFragmentInfoController","config","instance","logger","fragmentModel","started","loadFragmentTimeout","startFragmentTime","streamProcessor","baseURLController","debug","stop","clearTimeout","loadNextFragmentInfo","representation","getRepresentationController","getCurrentRepresentation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","segments","SegmentTemplate","SegmentTimeline","S_asArray","request","segment","getMediaInfo","adaptationIndex","resolve","path","media","replace","bandwidth","tManifest","getRequestForSegment","requestFragment","getFragmentModel","isFragmentLoadedOrPending","executeRequest","initialize","getType","controllerType","fragmentInfoLoaded","deltaFragmentTime","deltaTime","delay","response","Date","getTime","setTimeout","error","reset","getLogger","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory","DashJSError","code","message","data","_ErrorsBase","_inherits","MssErrors","_super","_this","MSS_NO_TFRF_CODE","MSS_UNSUPPORTED_CODEC_CODE","MSS_NO_TFRF_MESSAGE","MSS_UNSUPPORTED_CODEC_MESSAGE","ErrorsBase","errors","override","publicOnly","err","_EventsBase","MediaPlayerEvents","AST_IN_FUTURE","BASE_URLS_UPDATED","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","BUFFER_LEVEL_UPDATED","DYNAMIC_TO_STATIC","ERROR","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_PROGRESS","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADING_STARTED","MANIFEST_LOADING_FINISHED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_STARTED","PERIOD_SWITCH_COMPLETED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","STREAM_INITIALIZING","STREAM_UPDATED","STREAM_ACTIVATED","STREAM_DEACTIVATED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","THROUGHPUT_MEASUREMENT_STORED","TTML_PARSED","TTML_TO_PARSE","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","CAN_PLAY_THROUGH","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_VOLUME_CHANGED","PLAYBACK_WAITING","MANIFEST_VALIDITY_CHANGED","EVENT_MODE_ON_START","EVENT_MODE_ON_RECEIVE","CONFORMANCE_VIOLATION","REPRESENTATION_SWITCH","ADAPTATION_SET_REMOVED_NO_CAPABILITIES","CONTENT_STEERING_REQUEST_COMPLETED","INBAND_PRFT","EventsBase","events","evt","MssFragmentMoofProcessor","dashMetrics","playbackController","errorHandler","errHandler","eventBus","ISOBoxer","processTfrf","tfrf","tfdt","timeShiftBufferDepth","entry","segmentTime","endTime","S","entries","parseFloat","fragment_absolute_time","baseMediaDecodeTime","updateDVR","getStreamInfo","manifestInfo","fragment_duration","lastSegment","isPaused","splice","trigger","Events","sender","newDuration","dvrInfos","getCurrentDVRInfo","addDVRInfo","updateCurrentTime","getBoxOffset","parent","offset","boxes","size","convertFragment","isoFile","parseBuffer","tfhd","fetch","track_ID","traf","createFullBox","version","flags","trun","tfxd","_parent","sepiff","usertype","saio","entry_count","saiz","sample_count","default_sample_info_size","sample_info_size","NumberOfEntries","moof","getLength","data_offset","trafPosInMoof","sencPosInTraf","write","updateSegmentList","MssFragmentMoovProcessor","adaptationSet","contentProtection","trackId","constants","protectionController","createOriginalFormatBox","sinf","codec","createBox","data_format","charCodeAt","stringToCharCode","createSchemeTypeBox","schm","scheme_type","scheme_version","createSchemeInformationBox","schi","tenc","default_IsEncrypted","default_IV_size","default_KID","hexStringtoBuffer","buf","Uint8Array","generateMoov","rep","ContentProtection","ftyp","major_brand","minor_version","compatible_brands","createFtypBox","createFile","moov","mvhd","creation_time","modification_time","round","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","createMvhdBox","trak","tkhd","layer","alternate_group","reserved3","width","height","createTkhdBox","mdia","mdhd","language","lang","createMdhdBox","hdlr","VIDEO","handler_type","AUDIO","name","reserved","createHdlrBox","minf","vmhd","graphicsmode","opcolor","createVmhdBox","smhd","balance","createSmhdBox","dinf","dref","location","createDrefBox","stbl","_data","stsd","codecs","substring","avc1","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","naluBytes","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","set","createAVC1ConfigurationRecord","createAVCVisualSampleEntry","mp4a","audioSpecificConfig","esdsLength","esds","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","createMP4AudioSampleEntry","createSampleEntry","createStsdBox","trex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","createTrexBox","keySystems","pssh_bytes","pssh","initData","Utils","appendBox","createProtectionSystemSpecificHeaderBox","getSupportedKeySystemsFromContentProtection","createMoovBox","arrayEqual","arr1","arr2","every","element","saioProcessor","_procFullBox","_procField","_procFieldArray","saizProcessor","sencProcessor","_procEntries","_procEntryField","_procSubEntries","clearAndCryptedData","uuidProcessor","_parsing","fragment_count","MssFragmentProcessor","mssFragmentMoovProcessor","mssFragmentMoofProcessor","context","processFragment","addBoxProcessor","MssParser","initialBufferSettings","BASE64","manifestModel","settings","SUPPORTED_CODECS","ROLE","ACCESSIBILITY","samplingFrequencyIndex","mimeTypeMap","getAttributeAsBoolean","node","attrName","getAttribute","mapAdaptationSet","streamIndex","segmentTemplate","qualityLevels","representations","fallBackId","contentType","mimeType","subType","maxWidth","maxHeight","role","schemeIdUri","Role","Role_asArray","accessibility","Accessibility","Accessibility_asArray","mediaUrl","streamIndexTimeScale","prevSegment","segmentTimeline","chunks","getElementsByTagName","MAX_SAFE_INTEGER","mapSegmentTimeline","availabilityTimeOffset","mapSegmentTemplate","BaseURL","Id","mapRepresentation","Representation","Representation_asArray","qualityLevel","fourCCValue","isNaN","toUpperCase","warn","nalHeader","exec","substr","getH264Codec","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","samplingRate","objectType","Channels","Uint16Array","setAttribute","getAACCodec","STPP","swapBytes","pos1","pos2","temp","processManifest","xmlDoc","adaptations","KID","timestampOffset","segmentDuration","contentProtections","smoothStreamingMedia","protection","protectionHeader","protocol","profiles","dvrWindowLength","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","streams","AdaptationSet","mapPeriod","firstChild","wrmHeader","uuid","prHeader","recordType","recordLength","recordValue","subarray","getWRMHeaderFromPRHeader","decodeArray","buffer","fromCharCode","DOMParser","parseFromString","querySelector","textContent","getKIDFromProtectionHeader","pro","__text","__prefix","pro_asArray","createPRContentProtection","widevineCP","wvCencHeader","encodeASCII","createWidevineContentProtection","ContentProtection_asArray","initialization","targetLiveDelay","streaming","liveDelay","liveDelayFragmentCount","targetDelayCapping","bufferTime","stableBufferTime","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","calcFromSegmentTimeline","timeShiftBuffer","update","prevManifest","getValue","presentationTimeOffset","parse","performance","now","parseDOM","xmlParseTime","mss2dashTime","toPrecision","getMatchers","getIron","MssHandler","mssParser","mssFragmentProcessor","fragmentInfoControllers","initSegmentType","streamController","getStreamProcessor","getActiveStreamProcessors","filter","processor","getFragmentInfoController","controller","startFragmentInfoControllers","forEach","TEXT","fragmentInfoController","onInitFragmentNeeded","chunk","createDataChunk","streamInfo","INIT_FRAGMENT_LOADED","onSegmentMediaLoaded","isDynamic","dvrWindowSize","onPlaybackPaused","getIsDynamic","onPlaybackSeeking","onTTMLPreProcess","ttmlSubtitles","off","INIT_FRAGMENT_NEEDED","createMssParser","createMssFragmentProcessor","registerEvents","on","priority","getSingletonFactoryByName","getClassName","EVENT_PRIORITY_HIGH","updateClassFactory","global"],"sourceRoot":""}